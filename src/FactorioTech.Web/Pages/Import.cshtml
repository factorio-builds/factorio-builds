@page
@model ImportModel

<h1>Import Blueprint</h1>

@if (Model.BlueprintString == null)
{
    <form method="post">
        <div asp-validation-summary="ModelOnly"></div>

        <p>Paste your blueprint string in the text area below.</p>
        <div class="form-group">
            <textarea asp-for="ImportInput.BlueprintString" class="form-control" rows="8"></textarea>
            <span asp-validation-for="ImportInput.BlueprintString"></span>
        </div>
        <button type="submit" class="btn btn-primary">Continue</button>
    </form>
}
else
{
    <form method="post">
        <div asp-validation-summary="ModelOnly"></div>

        <div class="form-group">
            <label asp-for="CreateInput.Title"></label>
            <input asp-for="CreateInput.Title" class="form-control" />
            <span asp-validation-for="CreateInput.Title" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="CreateInput.Slug"></label>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="slug-username-addon">https://factorio.tech/@User.GetUserName()/</span>
                </div>
                <input asp-for="CreateInput.Slug" class="form-control" aria-describedby="slug-username-addon"
                       readonly="@Model.ParentBlueprintId.HasValue" />
            </div>
            <span asp-validation-for="CreateInput.Slug" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="CreateInput.Description"></label>
            <textarea asp-for="CreateInput.Description" class="form-control" rows="8"></textarea>
            <span asp-validation-for="CreateInput.Description" class="text-danger"></span>
        </div>

        <button type="submit" asp-page-handler="Create" class="btn btn-primary">Create new blueprint</button>
    </form>

    <hr />
}

@if (Model.Envelope != null)
{
    @(
        await Html.RenderComponentAsync<BlueprintEnvelope>(RenderMode.Static, new {
            Envelope = Model.Envelope,
            MetadataCache = Model.MetadataCache,
        })
    )
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
