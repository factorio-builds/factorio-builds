@using FactorioTech.Web.Core;
@using Humanizer;
@using System.Text;

@inject ImageService _imageService
@inject BlueprintConverter _blueprintConverter

<div class="container">
    <div class="row">
        <div class="col-md-4">
            <img src="@imageUri" class="img-fluid" />
            @if (ShowCopyButton)
            {
                <br /><br />
                <a href="#" class="btn btn-primary">Copy to clipboard</a>
            }
        </div>
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <ul class="nav nav-tabs card-header-tabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <a class="nav-link active" id="overview-tab-@hash" data-toggle="tab" href="#overview-@hash" role="tab"
                               aria-controls="overview" aria-selected="true">
                                Overview
                            </a>
                        </li>
                        @if (entitiesCount > 0)
                        {
                            <li class="nav-item" role="presentation">
                                <a class="nav-link" id="entities-tab-@hash" data-toggle="tab" href="#entities-@hash" role="tab"
                                   aria-controls="entities" aria-selected="false">
                                    Entities <span class="badge badge-info">@entitiesCount</span>
                                </a>
                            </li>
                        }
                        @if (encoded != null)
                        {
                            <li class="nav-item" role="presentation">
                                <a class="nav-link" id="blueprint-tab-@hash" data-toggle="tab" href="#blueprint-@hash" role="tab"
                                   aria-controls="blueprint" aria-selected="false">
                                    Blueprint String <span class="badge badge-info">@Encoding.UTF8.GetByteCount(encoded).Bytes().Humanize("#.##")</span>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
                <div class="card-body">
                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="overview-@hash" role="tabpanel" aria-labelledby="overview-tab-@hash">
                            <h5 class="card-title">
                                @if (Blueprint.Icons != null)
                                {
                                    foreach (var icon in Blueprint.Icons.OrderBy(i => i.Index).Select(i => i.Signal))
                                    {
                                        <img src="/api/files/icon/32/@(icon.Type)/@(icon.Name).png" width="32" height="32" />
                                    }
                                }

                                @Blueprint.Label
                            </h5>
                            @if (!string.IsNullOrWhiteSpace(Blueprint.Description))
                            {
                                <p class="card-text">@Blueprint.Description</p>
                            }
                            <p class="card-text"><small class="text-muted">Contains @entitiesCount entities</small></p>
                        </div>
                        @if (entitiesCount > 0)
                        {
                            <div class="tab-pane fade" id="entities-@hash" role="tabpanel" aria-labelledby="entities-tab-@hash">
                                <table class="table table-striped table-sm">
                                    <tbody>
                                        @foreach (var (key, count) in GetEntityStats(Blueprint))
                                        {
                                            <tr>
                                                <td><img src="/api/files/icon/32/item/@(key).png" width="32" height="32" /></td>
                                                <td>@count</td>
                                                <td><a href="@Utils.GetWikiUrlForEntity(key)">@key</a></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        @if (encoded != null)
                        {
                            <div class="tab-pane fade" id="blueprint-@hash" role="tabpanel" aria-labelledby="blueprint-tab-@hash">
                                <code>@encoded</code>
                                <br /><br />
                                <a href="#" class="btn btn-primary">Copy to clipboard</a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public FactorioApi.Blueprint Blueprint { get; set; } = null!;

    [Parameter]
    public bool ShowCopyButton { get; set; }

    private string? hash;
    private string? imageUri;
    private string? encoded;
    private int entitiesCount;

    protected override async Task OnInitializedAsync()
    {
        entitiesCount = Blueprint.Entities.Count();
        encoded = await _blueprintConverter.Encode(Blueprint);
        (hash, imageUri) = await SaveBlueprintRendering(encoded);
    }

    private async Task<(string Hash, string ImageUri)> SaveBlueprintRendering(string encoded)
    {
        var hash = await _imageService.SaveBlueprintRendering(encoded);
        return (hash, $"/api/files/blueprint/{hash}.jpg");
    }

    public IDictionary<string, int> GetEntityStats(FactorioApi.Blueprint blueprint) =>
        blueprint.Entities
            .GroupBy(e => e.Name)
            .OrderByDescending(g => g.Count())
            .ToDictionary(g => g.Key.ToLowerInvariant(), g => g.Count());

}
